version: 0.2

env:
  variables:
    NODE_VERSION: "8.11.1"
    YARN_VERSION: "1.5.1"
    NODE_ENV: "development"
    AWS_ACCOUNT_ID: "344601915837"
    AWS_DEFAULT_REGION: "eu-central-1"
    IMAGE_REPO_NAME: "elmu-proto"
    BEANSTALK_PROJECT: "elmu-web"
    BEANSTALK_ENVIRONMENT: "Staging"
    BUILD_ARTIFACTS_BUCKET: "elmu-proto-build-artifacts"

phases:
  install:
    commands:
      - echo Entered the install phase...
      - wget "https://nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz" -O "node-v$NODE_VERSION-linux-x64.tar.gz"
      - tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1
      - rm "node-v$NODE_VERSION-linux-x64.tar.gz"
      - ln -s /usr/local/bin/node /usr/local/bin/nodejs
      - npm install -g "yarn@$YARN_VERSION"
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  pre_build:
    commands:
      - echo Entered the pre_build phase...
      - bash -c "$(curl -fsSL https://raw.githubusercontent.com/thii/aws-codebuild-extras/master/install)"
      - yarn install --non-interactive --frozen-lockfile
      - yarn run ci:prepare
  build:
    commands:
      - echo Entered the build phase...
      - yarn run ci
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$CODEBUILD_SOURCE_VERSION .
      - docker tag $IMAGE_REPO_NAME:$CODEBUILD_SOURCE_VERSION $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_SOURCE_VERSION
  post_build:
    commands:
      - echo Entered the post_build phase...
      - yarn run ci:cleanup
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_SOURCE_VERSION
      - echo Deploying to Elastic Beanstalk...
      - sed -i'' -e "s;%IMAGE_NAME%;$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_SOURCE_VERSION;g" ./Dockerrun.aws.json
      - aws s3 cp ./Dockerrun.aws.json s3://$BUILD_ARTIFACTS_BUCKET/$CODEBUILD_SOURCE_VERSION/Dockerrun.aws.json
      - aws elasticbeanstalk create-application-version --application-name "$BEANSTALK_PROJECT" --version-label "$CODEBUILD_SOURCE_VERSION" --source-bundle S3Bucket=$BUILD_ARTIFACTS_BUCKET,S3Key=$CODEBUILD_SOURCE_VERSION/Dockerrun.aws.json --description "Description"
      - aws elasticbeanstalk update-environment --environment-name "$BEANSTALK_ENVIRONMENT" --version-label "$CODEBUILD_SOURCE_VERSION"
