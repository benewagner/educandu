version: 2.1

defaults: &defaults
  working_directory: ~/elmu-web

orbs:
  docker: circleci/docker@1.0.0

jobs:
  build:
    <<: *defaults
    docker:
      - image: circleci/node:14.15.3
      - image: maildev/maildev:1.1.0
      - image: mongo:4.2.11-bionic
      - image: minio/minio:RELEASE.2020-12-18T03-27-42Z
        environment:
          MINIO_ACCESS_KEY: "UVDXF41PYEAX0PXD8826"
          MINIO_SECRET_KEY: "SXtajmM3uahrQ1ALECh3Z3iKT76s2s5GBJlbQMZx"
          MINIO_BROWSER: "on"
          MINIO_DOMAIN: "localhost"
        command: ["server", "/data"]
    environment:
      - NODE_ENV: development
      - ELMU_ENV: test
      - YARN_CACHE_FOLDER: ~/.cache/yarn
      - RELEASE_NUMBER: 0.0.<< pipeline.number >>
    steps:
      - checkout
      - restore_cache:
          key: yarn-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install Node Modules
          command: yarn install --non-interactive --check-files --frozen-lockfile
      - save_cache:
          key: yarn-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Prepare build
          command: ./node_modules/.bin/gulp ciPrepare
      - run:
          name: Build
          command: ./node_modules/.bin/gulp ci
      - run:
          name: Create release info file
          command: |
            echo "Release Number: $RELEASE_NUMBER" > ./dist/release.txt
      - persist_to_workspace:
          root: "."
          paths:
            - dist
  deploy:
    <<: *defaults
    executor: docker/docker
    environment:
      - DOCKER_IMAGE: elmu/elmu-web
      - OCTO_CLI_IMAGE: octopusdeploy/octo:7.4.2-alpine
      - OCTO_PROJECT_NAME: elmu-web
      - OCTO_ENVIRONMENT_NAME: Staging
      - OCTO_SERVER: https://elmu.octopus.app
      - RELEASE_NUMBER: 0.0.<< pipeline.number >>
      - GITHUB_COMPARE_URL: << pipeline.project.git_url >>/compare/<< pipeline.git.base_revision >>..<<pipeline.git.revision>>
    steps:
      - setup_remote_docker:
          version: 19.03.13
      - checkout
      - attach_workspace:
          at: "."
      - run:
          name: Create release number and release notes
          command: |
            echo 'export RELEASE_NOTES="Github: $GITHUB_COMPARE_URL"' >> $BASH_ENV
            source $BASH_ENV
      - docker/check
      - docker/build:
          image: $DOCKER_IMAGE
          tag: "$RELEASE_NUMBER"
      - docker/push:
          image: $DOCKER_IMAGE
          tag: "$RELEASE_NUMBER"
      - run:
          name: Pull Octopus CLI
          command: docker pull "$OCTO_CLI_IMAGE"
      - run:
          name: Create release
          command: |
            docker run --rm "$OCTO_CLI_IMAGE" \
              create-release \
              --server "$OCTO_SERVER" \
              --apiKey "$OCTO_API_KEY" \
              --project "$OCTO_PROJECT_NAME" \
              --releaseNumber "$RELEASE_NUMBER" \
              --releaseNotes "$RELEASE_NOTES"
      - run:
          name: Deploy release
          command: |
            docker run --rm "$OCTO_CLI_IMAGE" \
              deploy-release \
              --server "$OCTO_SERVER" \
              --apiKey "$OCTO_API_KEY" \
              --project "$OCTO_PROJECT_NAME" \
              --deployTo "$OCTO_ENVIRONMENT_NAME" \
              --releaseNumber "$RELEASE_NUMBER"

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main
