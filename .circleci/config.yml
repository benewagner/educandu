version: 2

defaults: &defaults
  working_directory: ~/elmu-web

jobs:
  build:
    <<: *defaults
    docker:
      - image: circleci/node:8.11.1
      - image: mvertes/alpine-mongo:3.4.10-0
    environment:
      - NODE_ENV: development
      - YARN_CACHE_FOLDER: ~/.cache/yarn
    steps:
      - checkout
      - restore_cache:
          key: yarn-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install Node Modules
          command: yarn install --non-interactive --check-files --frozen-lockfile
      - save_cache:
          key: yarn-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Prepare build
          command: ./node_modules/.bin/gulp ci:prepare
      - run:
          name: Build
          command: ./node_modules/.bin/gulp ci
      - persist_to_workspace:
          root: "."
          paths:
            - dist
  deploy:
    <<: *defaults
    docker:
      - image: circleci/buildpack-deps:artful
    environment:
      - AWS_ACCOUNT_ID: "344601915837"
      - AWS_DEFAULT_REGION: eu-central-1
      - IMAGE_REPO_NAME: elmu-web
      - BEANSTALK_PROJECT: elmu-web
      - BEANSTALK_ENVIRONMENT: Staging
      - BUILD_ARTIFACTS_BUCKET: elmu-web-build-artifacts
    steps:
      - setup_remote_docker
      - checkout
      - attach_workspace:
          at: "."
      - run:
          name: Create application version
          command: |
            echo 'export CODEBUILD_SOURCE_VERSION="0.0.$CIRCLE_BUILD_NUM"' >> $BASH_ENV
            echo 'export CODEBUILD_IMAGE_NAME="elmu-web:0.0.$CIRCLE_BUILD_NUM"' >> $BASH_ENV
            echo 'export CODEBUILD_REPOSITORY_NAME="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get install -y python-pip libyaml-dev python-dev
            sudo pip install awscli
      - run:
          name: Login to AWS ECR
          command: $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - run:
          name: Build Docker image
          command: docker build -t $CODEBUILD_IMAGE_NAME .
      - run:
          name: Tag Docker image
          command: docker tag $CODEBUILD_IMAGE_NAME $CODEBUILD_REPOSITORY_NAME/$CODEBUILD_IMAGE_NAME
      - run:
          name: Push Docker image
          command: docker push $CODEBUILD_REPOSITORY_NAME/$CODEBUILD_IMAGE_NAME
      - run:
          name: Prepare deployment artifact
          command: |
            sed -i'' -e "s;%IMAGE_NAME%;$CODEBUILD_REPOSITORY_NAME/$CODEBUILD_IMAGE_NAME;g" ./Dockerrun.aws.json
      - run:
          name: Upload deployment artifact
          command: aws s3 cp ./Dockerrun.aws.json s3://$BUILD_ARTIFACTS_BUCKET/$CODEBUILD_SOURCE_VERSION/Dockerrun.aws.json

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
