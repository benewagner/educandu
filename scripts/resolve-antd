#!/usr/bin/env node

/* eslint no-sync: 0 */

require('@babel/register')({ extensions: ['.jsx'] });
require('@babel/polyfill');

const fs = require('fs');
const path = require('path');
const glob = require('glob');
const { EOL } = require('os');

const readFile = fileName => fs.readFileSync(fileName, 'utf8');
const writeFile = (fileName, content) => fs.writeFileSync(fileName, content, 'utf8');

function processContent(content) {
  return content.replace(/const\s+{([^}]+)}\s*=\s*require\s*\(\s*['"]antd['"]\s*\)\s*;?/g, (match, p1) => {
    const subModules = p1.split(',').map(x => x.trim());
    return subModules.map(x => `const ${x} = require('antd/lib/${x.toLowerCase()}');`).join(EOL);
  });
}

glob.sync(path.join(__dirname, '../src/**/*.{js,jsx}')).forEach(fileName => {
  const oldContent = readFile(fileName);
  const newContent = processContent(oldContent);
  if (newContent !== oldContent) {
    writeFile(fileName, newContent);
  }
});
