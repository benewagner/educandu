#!/usr/bin/env node

/* eslint-disable no-process-exit, no-process-env, no-console, global-require */

require('@babel/register');
require('core-js');

const path = require('path');
const Umzug = require('umzug');
const { MongoClient } = require('mongodb');

(async function migrate() {

  const connectionString = process.env.ELMU_WEB_CONNECTION_STRING;
  if (!connectionString) {
    throw new Error('Environement variable ELMU_WEB_CONNECTION_STRING is not  set');
  }

  const mongoClient = await MongoClient.connect(connectionString, { useUnifiedTopology: true });
  const db = mongoClient.db();

  const umzug = new Umzug({
    storage: 'mongodb',
    storageOptions: {
      collection: db.collection('migrations')
    },
    migrations: {
      path: path.join(__dirname, 'migrations'),
      pattern: /^\d{4}-\d{2}-\d{2}-.*\.js$/,
      customResolver: filePath => {
        const Migration = require(filePath).default;
        return new Migration(db, mongoClient);
      }
    }
  });

  try {
    const result = await umzug.up();
    console.log(result);
  } finally {
    await mongoClient.close();
  }

})().catch(error => {

  console.error(error);
  process.exit(-1);

});
